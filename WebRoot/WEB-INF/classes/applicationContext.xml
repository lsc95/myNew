<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
		xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
		xmlns:mvc="http://www.springframework.org/schema/mvc" 
		xsi:schemaLocation="http://www.springframework.org/schema/beans
	        http://www.springframework.org/schema/beans/spring-beans.xsd
	        http://www.springframework.org/schema/context
	        http://www.springframework.org/schema/context/spring-context.xsd
	        http://www.springframework.org/schema/aop
	        http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd        
	        http://www.springframework.org/schema/tx
	        http://www.springframework.org/schema/tx/spring-tx.xsd"> 
	    
	<context:property-placeholder location="classpath:db.properties" />   
	<context:component-scan base-package="com.coderli" />
	
	<!-- 1. 配置数据源,采用DBCP2来创建数据库连接 -->
	<bean id="ds" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	<!-- 2. 让Spring来负责创建SqlSessionFactory 
		SqlSessionFactoryBean就是在IOC容器初始化的时候自动由Spring来负责创建SessionFactory
		并且对SessionFactory进行管理,其作用就相当于MyBatisUtils<
	-->	
	<bean id="sf" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 数据源使用ds对象所选用的数据库 -->
		<property name="dataSource" ref="ds"></property>
		<!-- 自动加载mappers目录下的SQL xml文件 -->
		<property name="mapperLocations" value="classpath:mappers/*.xml"></property>
	</bean>
	
	<!-- 3.在IOC容器加载的时候自动扫描DAO接口,我们不再需要写<Mappers>这些配置文件了 -->	
	<bean id="msc" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.coderli.dao" />
	</bean>
	
	<!-- 增加声明式事务控制 -->
	<!-- 1.定义事务管理器,事务管理器用于执行打开\提交\回滚事务的操作 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="ds" /><!-- 绑定数据源 -->
	</bean>
	<!-- 2. 通知Spring,程序将采用注解的形式来管理事务 -->
	<tx:annotation-driven transaction-manager="txManager"/>

	
	<mvc:annotation-driven></mvc:annotation-driven>
	<mvc:default-servlet-handler/>
	
</beans>